import { OnInit, ViewContainerRef, ComponentFactoryResolver, ViewChild, Component, ComponentFactory } from "@angular/core";
import { RegroupementAlarmeComponent } from "../regroupement-alarme-component/regroupement-alarme-component.component";

@Component({
  selector: 'app-schema-exploitation',
  template: `
  <button (click)="ouvrirModal('Alarme')"></button>
  <div #parent (evenement)="ajouterEvenement($event)"></div> `
})
export class SchemaExploitationComponent {

  @ViewChild('parent', { read: ViewContainerRef }) container: ViewContainerRef;

  ajouterEvenement(evenement) {
    console.log(evenement);
  }
  alarmeObjectFromChild: any;
  
  ouvrirModal(evenement: string) {


    if (evenement == "Alarme")
    {
      let comp:ComponentFactory<RegroupementAlarmeComponent> = this._cfr.resolveComponentFactory(RegroupementAlarmeComponent);
      var alarmeComponent = this.container.createComponent(comp);
      alarmeComponent.instance.evenement.subscribe((alarmeObjectYouWant) => {
        this.alarmeObjectFromChild = alarmeObjectYouWant;
        console.log("TEST")
      })
      alarmeComponent.instance._ref = alarmeComponent;

    }
  }

  constructor(
    private _cfr: ComponentFactoryResolver
  ) {}

 
}